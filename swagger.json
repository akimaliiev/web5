{
  "swagger": "2.0",
  "info": {
    "version": "1.0.0",
    "title": "My User Project CRUD",
    "description": "My User Project Application API",
    "license": {
      "name": "AITU",
      "url": "https://opensource.org/licenses/MIT"
    }
  },
  "host": "localhost:3000",
  "basePath": "/",
  "tags": [
    {
      "name": "Users",
      "description": "API for users in the system"
    }
  ],
  "schemes": ["http"],
  "consumes": ["application/json"],
  "produces": ["application/json"],
  "paths": {
    "/read": {
      "get": {
        "tags": ["User"],
        "summary": "Get all users in system",
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Users"}
            }
          }
        }
      }
    },
    "/user/emailFind": {
      "get": {
        "summary": "Find user",
        "parameters": [
          {
            "name": "email",
            "in": "query",
            "required": true,
            "description": "email of user that we want to find",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "User data",
            "schema": {
              "example":{
                "email": "test@gmail.com",
                "firstName": "testFirstName",
                "lastName": "testLastName",
                "gpa": "87775556666"
              }
            }
          },
          "201":{
            "description": "User not found"
          },
          "404":{
            "description": "error.message"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "description": "Create new user in system",
        "parameters": [
          {
            "name": "user",
            "in": "body",
            "description": "User that we want to create",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "New user is created",
            "schema": {
              "$ref": "#/definitions/User"
            }
          },
          "409": {
            "description": "Database error"
          }
        }
      }
    },
    "/user/id": {
      "patch": {

        "summary": "Update user",
        "parameters": [
          {
            "name": "newEmail",
            "in": "body",
            "required": true,
            "description": "Email of user that we want to update",
            "schema":{
              "example": {
                "newEmail": "testNew@gmail.com",
                "newFirstName": "newFirstName",
                "newLastName": "newLastname",
                "newGpa": "645645",
                "oldEmail": "test@gmail.com"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User updated successfully.",
            "schema": {
              "example":{
                "email": "testCreate@gmail.com"
              }
            }
          },
          "404":{
            "description": "User not found"
          },
          "500":{
            "description": "err.message"
          }
        }
      }
    },
    "/user/email": {
      "delete": {

        "summary": "Delete user",
        "parameters": [
          {
            "name": "email",
            "in": "body",
            "required": true,
            "description": "Email of user that we want to delete",
            "schema":{
              "example": "test@gmail.com"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted succesfully!",
            "schema": {
              "example":{
                "email": "testCreate@gmail.com"
              }
            }
          },
          "404":{
            "description": "User not found"
          },
          "500":{
            "description": "err.message"
          }
        }
      }
    }
  },
  "definitions": {
    "User": {
      "required": ["email"],
      "properties": {
        "email": {
          "type": "string",
          "uniqueItems": true
        },
        "firstName": {
          "type": "string",
          "default": ""
        },
        "lastName": {
          "type": "string"
        },
        "gpa": {
          "type": "string"
        }
      }
    },
  "Users": {
      "type": "array",
      "$ref": "#/definitions/User"
    }
  }
}


